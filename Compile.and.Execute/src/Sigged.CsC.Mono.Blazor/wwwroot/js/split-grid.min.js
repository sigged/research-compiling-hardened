/*! split-grid - v1.0.9 */
(function(n,t){typeof exports=="object"&&typeof module!="undefined"?module.exports=t():typeof define=="function"&&define.amd?define(t):n.Split=t()})(this,function(){"use strict";function h(n){var t;return(t=[]).concat.apply(t,Array.from(n.ownerDocument.styleSheets).map(function(n){var t=[];try{t=Array.from(n.cssRules||[])}catch(i){}return t})).filter(function(t){var i=!1;try{i=n.matches(t.selectorText)}catch(r){}return i})}function b(n){return new r(n)}var f=function(n,t){return Number(n.slice(0,-1*t.length))},l=function(n){return n.endsWith("px")?{value:n,type:"px",numeric:f(n,"px")}:n.endsWith("fr")?{value:n,type:"fr",numeric:f(n,"fr")}:n.endsWith("%")?{value:n,type:"%",numeric:f(n,"%")}:n==="auto"?{value:n,type:"auto"}:null},e=function(n){return n.split(" ").map(l)},a=function(n,t,i,r){i===void 0&&(i=0);r===void 0&&(r=!1);var u=r?n+1:n,f=t.slice(0,u).reduce(function(n,t){return n+t.numeric},0),e=i?n*i:0;return f+e},o=function(n,t,i){return t.concat(i).map(function(t){return t.style[n]}).filter(function(n){return n!==undefined&&n!==""})},v=function(n,t){return t.endsWith(n)?Number(t.slice(0,-1*n.length)):null},s=function(n){for(var t=0;t<n.length;t++)if(n[t].numeric>0)return t;return null},y="grid-template-columns",p="grid-template-rows",i=function(){return!1},w=function(n,t,i){n.style[t]=i},n=function(n,t,i){var r=n[t];return r!==undefined?r:i},t=function(t,r,u){this.direction=t;this.element=r.element;this.track=r.track;this.trackTypes={};t==="column"?(this.gridTemplateProp=y,this.gridGapProp="grid-column-gap",this.cursor=n(u,"columnCursor",n(u,"cursor","col-resize")),this.snapOffset=n(u,"columnSnapOffset",n(u,"snapOffset",30)),this.dragInterval=n(u,"columnDragInterval",n(u,"dragInterval",1)),this.clientAxis="clientX",this.optionStyle=n(u,"gridTemplateColumns")):t==="row"&&(this.gridTemplateProp=p,this.gridGapProp="grid-row-gap",this.cursor=n(u,"rowCursor",n(u,"cursor","row-resize")),this.snapOffset=n(u,"rowSnapOffset",n(u,"snapOffset",30)),this.dragInterval=n(u,"rowDragInterval",n(u,"dragInterval",1)),this.clientAxis="clientY",this.optionStyle=n(u,"gridTemplateRows"));this.onDragStart=n(u,"onDragStart",i);this.onDragEnd=n(u,"onDragEnd",i);this.onDrag=n(u,"onDrag",i);this.writeStyle=n(u,"writeStyle",w);this.startDragging=this.startDragging.bind(this);this.stopDragging=this.stopDragging.bind(this);this.drag=this.drag.bind(this);this.minSizeStart=r.minSizeStart;this.minSizeEnd=r.minSizeEnd;r.element&&(this.element.addEventListener("mousedown",this.startDragging),this.element.addEventListener("touchstart",this.startDragging))};t.prototype.getDimensions=function(){var n=this.grid.getBoundingClientRect(),t=n.width,i=n.height,r=n.top,u=n.bottom,f=n.left,e=n.right;this.direction==="column"?(this.start=r,this.end=u,this.size=i):this.direction==="row"&&(this.start=f,this.end=e,this.size=t)};t.prototype.getSizeAtTrack=function(n,t){return a(n,this.computedPixels,this.computedGapPixels,t)};t.prototype.getSizeOfTrack=function(n){return this.computedPixels[n].numeric};t.prototype.getRawTracks=function(){var n=o(this.gridTemplateProp,[this.grid],h(this.grid));if(!n.length){if(this.optionStyle)return this.optionStyle;throw Error("Unable to determine grid template tracks from styles.");}return n[0]};t.prototype.getGap=function(){var n=o(this.gridGapProp,[this.grid],h(this.grid));return n.length?n[0]:null};t.prototype.getRawComputedTracks=function(){return window.getComputedStyle(this.grid)[this.gridTemplateProp]};t.prototype.getRawComputedGap=function(){return window.getComputedStyle(this.grid)[this.gridGapProp]};t.prototype.setTracks=function(n){this.tracks=n.split(" ");this.trackValues=e(n)};t.prototype.setComputedTracks=function(n){this.computedTracks=n.split(" ");this.computedPixels=e(n)};t.prototype.setGap=function(n){this.gap=n};t.prototype.setComputedGap=function(n){this.computedGap=n;this.computedGapPixels=v("px",this.computedGap)||0};t.prototype.getMousePosition=function(n){return"touches"in n?n.touches[0][this.clientAxis]:n[this.clientAxis]};t.prototype.startDragging=function(n){var t,r,u,f,e;if(!("button"in n)||n.button===0){if(n.preventDefault(),this.grid=this.element?this.element.parentNode:n.target.parentNode,this.getDimensions(),this.setTracks(this.getRawTracks()),this.setComputedTracks(this.getRawComputedTracks()),this.setGap(this.getGap()),this.setComputedGap(this.getRawComputedGap()),t=this.trackValues.filter(function(n){return n.type==="%"}),r=this.trackValues.filter(function(n){return n.type==="fr"}),this.totalFrs=r.length,this.totalFrs&&(u=s(r),u!==null&&(this.frToPixels=this.computedPixels[u].numeric/r[u].numeric)),t.length&&(f=s(t),f!==null&&(this.percentageToPixels=this.computedPixels[f].numeric/t[f].numeric)),e=this.getSizeAtTrack(this.track,!1)+this.start,this.dragStartOffset=this.getMousePosition(n)-e,this.aTrack=this.track-1,this.track<this.tracks.length-1)this.bTrack=this.track+1;else throw Error("Invalid track index: "+this.track+". Track must be between two other tracks and only "+this.tracks.length+" tracks were found.");this.aTrackStart=this.getSizeAtTrack(this.aTrack,!1)+this.start;this.bTrackEnd=this.getSizeAtTrack(this.bTrack,!0)+this.start;this.dragging=!0;window.addEventListener("mouseup",this.stopDragging);window.addEventListener("touchend",this.stopDragging);window.addEventListener("touchcancel",this.stopDragging);window.addEventListener("mousemove",this.drag);window.addEventListener("touchmove",this.drag);this.grid.addEventListener("selectstart",i);this.grid.addEventListener("dragstart",i);this.grid.style.userSelect="none";this.grid.style.webkitUserSelect="none";this.grid.style.MozUserSelect="none";this.grid.style.pointerEvents="none";this.grid.style.cursor=this.cursor;window.document.body.style.cursor=this.cursor;this.onDragStart(this.direction,this.track)}};t.prototype.stopDragging=function(){this.dragging=!1;this.cleanup();this.onDragEnd(this.direction,this.track);this.needsDestroy&&(this.element&&(this.element.removeEventListener("mousedown",this.startDragging),this.element.removeEventListener("touchstart",this.startDragging)),this.destroyCb(),this.needsDestroy=!1,this.destroyCb=null)};t.prototype.drag=function(n){var t=this.getMousePosition(n),s=this.getSizeOfTrack(this.track),u=this.aTrackStart+this.minSizeStart+this.dragStartOffset+this.computedGapPixels,f=this.bTrackEnd-this.minSizeEnd-this.computedGapPixels-(s-this.dragStartOffset),v=u+this.snapOffset,y=f-this.snapOffset,i,r,e,h,c,l,a,o;t<v&&(t=u);t>y&&(t=f);t<u?t=u:t>f&&(t=f);i=t-this.aTrackStart-this.dragStartOffset-this.computedGapPixels;r=this.bTrackEnd-t+this.dragStartOffset-s-this.computedGapPixels;this.dragInterval>1&&(e=Math.round(i/this.dragInterval)*this.dragInterval,r-=e-i,i=e);i<this.minSizeStart&&(i=this.minSizeStart);r<this.minSizeEnd&&(r=this.minSizeEnd);this.trackValues[this.aTrack].type==="px"?this.tracks[this.aTrack]=i+"px":this.trackValues[this.aTrack].type==="fr"?this.totalFrs===1?this.tracks[this.aTrack]="1fr":(h=i/this.frToPixels,this.tracks[this.aTrack]=h+"fr"):this.trackValues[this.aTrack].type==="%"&&(c=i/this.percentageToPixels,this.tracks[this.aTrack]=c+"%");this.trackValues[this.bTrack].type==="px"?this.tracks[this.bTrack]=r+"px":this.trackValues[this.bTrack].type==="fr"?this.totalFrs===1?this.tracks[this.bTrack]="1fr":(l=r/this.frToPixels,this.tracks[this.bTrack]=l+"fr"):this.trackValues[this.bTrack].type==="%"&&(a=r/this.percentageToPixels,this.tracks[this.bTrack]=a+"%");o=this.tracks.join(" ");this.writeStyle(this.grid,this.gridTemplateProp,o);this.onDrag(this.direction,this.track,o)};t.prototype.cleanup=function(){window.removeEventListener("mouseup",this.stopDragging);window.removeEventListener("touchend",this.stopDragging);window.removeEventListener("touchcancel",this.stopDragging);window.removeEventListener("mousemove",this.drag);window.removeEventListener("touchmove",this.drag);this.grid&&(this.grid.removeEventListener("selectstart",i),this.grid.removeEventListener("dragstart",i),this.grid.style.userSelect="",this.grid.style.webkitUserSelect="",this.grid.style.MozUserSelect="",this.grid.style.pointerEvents="",this.grid.style.cursor="");window.document.body.style.cursor=""};t.prototype.destroy=function(n,t){n===void 0&&(n=!0);n||this.dragging===!1?(this.cleanup(),this.element&&(this.element.removeEventListener("mousedown",this.startDragging),this.element.removeEventListener("touchstart",this.startDragging)),t&&t()):(this.needsDestroy=!0,t&&(this.destroyCb=t))};var c=function(n,t,i){return t in n?n[t]:i},u=function(i,r){return function(u){if(u.track<1)throw Error("Invalid track index: "+u.track+". Track must be between two other tracks.");var f=i==="column"?r.columnMinSizes||{}:r.rowMinSizes||{},e=i==="column"?"columnMinSize":"rowMinSize";return new t(i,Object.assign({},{minSizeStart:c(f,u.track-1,n(r,e,n(r,"minSize",0))),minSizeEnd:c(f,u.track+1,n(r,e,n(r,"minSize",0)))},u),r)}},r=function(n){var t=this;this.columnGutters={};this.rowGutters={};this.options=Object.assign({},{columnGutters:n.columnGutters||[],rowGutters:n.rowGutters||[],columnMinSizes:n.columnMinSizes||{},rowMinSizes:n.rowMinSizes||{}},n);this.options.columnGutters.forEach(function(i){t.columnGutters[n.track]=u("column",t.options)(i)});this.options.rowGutters.forEach(function(i){t.rowGutters[n.track]=u("row",t.options)(i)})};return r.prototype.addColumnGutter=function(n,t){this.columnGutters[t]&&this.columnGutters[t].destroy();this.columnGutters[t]=u("column",this.options)({element:n,track:t})},r.prototype.addRowGutter=function(n,t){this.rowGutters[t]&&this.rowGutters[t].destroy();this.rowGutters[t]=u("row",this.options)({element:n,track:t})},r.prototype.removeColumnGutter=function(n,t){var i=this;t===void 0&&(t=!0);this.columnGutters[n]&&this.columnGutters[n].destroy(t,function(){delete i.columnGutters[n]})},r.prototype.removeRowGutter=function(n,t){var i=this;t===void 0&&(t=!0);this.rowGutters[n]&&this.rowGutters[n].destroy(t,function(){delete i.rowGutters[n]})},r.prototype.handleDragStart=function(n,t,i){t==="column"?(this.columnGutters[i]&&this.columnGutters[i].destroy(),this.columnGutters[i]=u("column",this.options)({track:i}),this.columnGutters[i].startDragging(n)):t==="row"&&(this.rowGutters[i]&&this.rowGutters[i].destroy(),this.rowGutters[i]=u("row",this.options)({track:i}),this.rowGutters[i].startDragging(n))},r.prototype.destroy=function(n){var t=this;n===void 0&&(n=!0);Object.keys(this.columnGutters).forEach(function(i){return t.columnGutters[i].destroy(n,function(){delete t.columnGutters[i]})});Object.keys(this.rowGutters).forEach(function(i){return t.rowGutters[i].destroy(n,function(){delete t.rowGutters[i]})})},b});
//# sourceMappingURL=split-grid.min.js.map